@model Gradebook.Models.Class
@using Microsoft.AspNet.Identity
@using Gradebook.Utils;
@{
    LocalizedStrings.LanguageDictionary D = LocalizedStrings.Class.Details[ViewBag.LanguageId];
    ViewBag.Title = D["Class details"];
    string userId = User.Identity.GetUserId();
}

<h2>@ViewBag.Title</h2>

<dl class="dl-horizontal">
    <dt>
        @D["Year"]
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Year)
    </dd>

    <dt>
        @D["Unit"]
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Unit)
    </dd>
</dl>

<h4>@D["Supervisor"]</h4>
<dl class="dl-horizontal">
    <dt>
        @D["Name"]
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Supervisor.ApplicationUser.Name)
    </dd>

    <dt>
        @D["Surname"]
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Supervisor.ApplicationUser.Surname)
    </dd>

    <dt>
        @D["Email"]
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Supervisor.ApplicationUser.Email)
    </dd>
</dl>

<h4>@D["Students"]</h4>
<table class="list-table">
    <thead>
    <tr>
        <th>
            @D["Name"]
        </th>
        <th>
            @D["Surname"]
        </th>
        <th>
            @D["Email"]
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Students)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ApplicationUser.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApplicationUser.Surname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApplicationUser.Email)
            </td>
            <td>
                @Html.ActionLink(D["Details"], "Details", "Student", new { id = item.Id }, null)
            </td>
        </tr>
    }
    </tbody>
</table>

<h4>@D["Teachers"]</h4>
<table class="list-table">
    <thead>
    <tr>
        <th>
            @D["Name"]
        </th>
        <th>
            @D["Surname"]
        </th>
        <th>
            @D["Email"]
        </th>
        <th>
            @D["Subject"]
        </th>
        @if (User.IsInRole(Role.Teacher))
        {<th></th>}
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.TeacherClassSubjects)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Teacher.ApplicationUser.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Teacher.ApplicationUser.Surname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Teacher.ApplicationUser.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subject.Name)
            </td>
            @if (User.IsInRole(Role.Teacher))
            {
            <td>
                @if (userId == item.TeacherId)
                {
                    @Html.ActionLink(D["Create appointment"], "CreateAppointment", "Class", new { classId = Model.Id, teacherClassSubjectId = item.Id }, null)
                }
            </td>
            }
        </tr>
    }
    </tbody>
</table>

@if (User.IsInRole(Gradebook.Utils.Role.Teacher)) // użytkownik jest nauczycielem
{
    if ((bool)ViewBag.IsSupervisor)
    {
        @Html.ActionLink(D["Send announcement to parents"], "CreateAnnouncement", new { id = Model.Id })
        <br />
        @Html.ActionLink(D["Generate grade sheet"], "GenerateGradeSheet", new { id = Model.Id })
        <br />
    }
    @Html.ActionLink(D["Back"], "Index")
}
