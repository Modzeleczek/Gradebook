@model Gradebook.Models.Quiz
@using Gradebook.Utils;
@{
    LocalizedStrings.LanguageDictionary D = LocalizedStrings.Quiz.Edit[ViewBag.LanguageId];
    ViewBag.Title = D["Edit quiz"];
    var subjects = (ICollection<SelectListItem>)ViewBag.Subjects;
}

<h2>@ViewBag.Title</h2>

@Html.ActionLink(D["Back"], "Index")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectId, D["Subject"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SubjectId, subjects, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, D["Name"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, D["Duration [s]"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" name="button" value="Save" class="btn btn-default">@D["Save"]</button>
            </div>
        </div>
    </div>
}


<h4>@D["Questions"]</h4>
<table class="list-table">
    <thead>
    <tr>
        <th>
            @D["Content"]
        </th>
        <th>
            @D["Answers"]
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.ClosedQuestions)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                <table class="table">
                    @foreach (var answer in item.Options)
                    {
                        <tr>
                            <td>
                                @answer.Content
                            </td>
                            <td>
                                @(answer.IsCorrect == true ? D["correct"] : D["incorrect"])
                            </td>
                            <td>
                                @Html.ActionLink(D["Delete answer"], "DeleteAnswer", new { quizId = Model.Id, answerId = answer.Id })
                            </td>
                        </tr>
                    }
                </table>
            </td>
        </tr>
        <tr>
            <td>
                @Html.ActionLink(D["Add answer"], "AddAnswer", new { quizId = Model.Id, questionId = item.Id }) |
                @Html.ActionLink(D["Delete question"], "DeleteQuestion", new { quizId = Model.Id, questionId = item.Id })
            </td>
        </tr>
    }
    </tbody>
</table>

@Html.ActionLink(D["Add question"], "AddQuestion", new { quizId = Model.Id })


<h4>@D["Sharings"]</h4>
<table class="list-table">
    <thead>
    <tr>
        <th>
            @D["Year"]
        </th>
        <th>
            @D["Unit"]
        </th>
        <th>
            @D["Grade weight"]
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.QuizSharings)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Class.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Class.Unit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GradeWeight)
            </td>
            <td>
                @Html.ActionLink(D["Delete"], "DeleteSharing", new { quizId = Model.Id, classId = item.ClassId })
            </td>
        </tr>
    }
    </tbody>
</table>

@Html.ActionLink(D["Grant access"], "AddQuizSharing", new { quizId = Model.Id })
