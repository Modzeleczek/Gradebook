@model Gradebook.Models.Quiz
@using Gradebook.Utils;
@{
    LocalizedStrings.LanguageDictionary D = LocalizedStrings.Quiz.Edit[ViewBag.LanguageId];
    ViewBag.Title = D["Edit quiz"];
    ViewBag.SubjectId = new LinkedList<SelectListItem>();
}

<h2>@ViewBag.Title</h2>

@Html.ActionLink(D["Back"], "List", null, new { @class = "btn btn-default" })

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="alert alert-danger">@ViewBag.ValidationMessage</div>

        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectId, D["Subject"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("subjectId")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, D["Name"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, D["Duration [s]"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" name="button" value="Save" class="btn btn-primary">@D["Save"]</button>
            </div>
        </div>
    </div>
}

@section styles {
    @Styles.Render("~/Content/selectize")
}
@section scripts {
@Scripts.Render("~/Scripts/selectize/selectize.js")
<script type="text/javascript">
$(document).ready(function () {
    const subjectRenderOption = {
        option: function (it, escape) {
            return '<div class="selectDiv">' +
                '<span class="mainName">' + escape(it.Name) + '</span>' +
                '</div>';
        }
    };
    const subjectSelect = $('#subjectId').selectize({
        valueField: 'Id', labelField: 'Name', searchField: ['Name'], sortField: 'Name',
        onInitialize: function () {
            $.ajax({
                url: '/Teacher/Quiz/GetSubjects',
                type: 'POST',
                success: function (subjects) {
                    const selectize = subjectSelect[0].selectize;
                    for (let i = 0; i < subjects.length; ++i)
                        selectize.addOption(subjects[i]);
                    selectize.setValue('@Model.SubjectId');
                },
                error: function (response) { console.log(response); }
            });
        }, render: subjectRenderOption
    });
});
</script>
}

<h4>@D["Questions"]</h4>
<table class="list-table">
    <thead>
    <tr>
        <th>
            @D["Content"]
        </th>
        <th>
            @D["Points"]
        </th>
        <th></th>
        <th class="sorter-false filter-false">
            @D["Answers"]
        </th>
    </tr>
    </thead>
    <tbody>
    @if (Model.ClosedQuestions.Count > 0)
    {
        foreach (var item in Model.ClosedQuestions)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Points)
                </td>
                <td>
                    @Html.ActionLink(D["Edit"], "EditQuestion", new { questionId = item.Id }, new { @class = "btn-sm btn-primary" })
                    @Html.ActionLink(D["Add answer"], "AddAnswer", new { questionId = item.Id }, new { @class = "btn-sm btn-primary" })
                    @Html.ActionLink(D["Delete question"], "DeleteQuestion", new { questionId = item.Id }, new { @class = "btn-sm btn-danger" })
                </td>
                <td>
                    <table class="table">
                        @foreach (var answer in item.Options)
                        {
                            <tr>
                                <td>
                                    @answer.Content
                                </td>
                                <td>
                                    @(answer.IsCorrect == true ? D["correct"] : D["incorrect"])
                                </td>
                                <td>
                                    @Html.ActionLink(D["Delete answer"], "DeleteAnswer", new { quizId = Model.Id, answerId = answer.Id }, new { @class = "btn-sm btn-danger" })
                                </td>
                            </tr>
                        }
                    </table>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td>@D["No questions"]</td>
        </tr>
    }
    </tbody>
</table>

@Html.ActionLink(D["Add question"], "AddQuestion", new { quizId = Model.Id }, new { @class = "btn btn-primary" })


<h4>@D["Sharings"]</h4>
<table class="list-table">
    <thead>
    <tr>
        <th>
            @D["Year"]
        </th>
        <th>
            @D["Unit"]
        </th>
        <th>
            @D["Grade weight"]
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @if (Model.QuizSharings.Count > 0)
    {
        foreach (var item in Model.QuizSharings)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Class.Year)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Class.Unit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GradeWeight)
                </td>
                <td>
                    @Html.ActionLink(D["Delete"], "DeleteSharing", new { quizId = Model.Id, classId = item.ClassId }, new { @class = "btn-sm btn-danger" })
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td>@D["No sharings"]</td>
        </tr>
    }
    </tbody>
</table>

@Html.ActionLink(D["Grant access"], "AddQuizSharing", new { quizId = Model.Id }, new { @class = "btn btn-primary" })
