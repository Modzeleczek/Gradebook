@model Gradebook.Models.Class
@using Gradebook.Utils;
@{
    LocalizedStrings.LanguageDictionary D = LocalizedStrings.Class.Create[ViewBag.LanguageId];
    ViewBag.Title = D["Create class"];
    ViewBag.SupervisorId = new LinkedList<SelectListItem>();
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formId" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <div class="alert alert-danger">@ViewBag.ValidationMessage</div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupervisorId, D["Supervisor"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("supervisorId")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, D["Year"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Year, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Unit, D["Unit"], htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Unit, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input onclick="document.getElementById('formId').submit()" type="submit" value="@D["Create"]" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@Html.ActionLink(D["Back"], "List", null, new { @class = "btn btn-default" })

@section styles {
    @Styles.Render("~/Content/selectize")
}
@section scripts {
@Scripts.Render("~/Scripts/selectize/selectize.js")
<script type="text/javascript">
    $(document).ready(function () {
        const select_ = $('#supervisorId').selectize({
            valueField: 'Id',
            labelField: 'Email',
            searchField: ['Surname', 'Name', 'Email'],
            sortField: 'Surname',
            onInitialize: function () {
                $.ajax({
                    url: '/Admin/Class/GetSupervisors',
                    type: 'POST',
                    success: function (data) {
                        const selectize = select_[0].selectize;
                        for (let i = 0; i < data.length; ++i)
                            selectize.addOption(data[i]);
                    },
                    error: function (response) { console.log(response); }
                });
            },
            render: {
                option: function (it, escape) {
                    return '<div class="selectDiv">' +
                        '<span class="mainName">' + escape(it.Email) + '</span><br />' +
                        '<span class="subLabel">@D["Name"]: </span>' +
                        '<span class="subValue">' + escape(it.Name) + '</span>' +
                        '<span class="subLabel">@D["Surname"]: </span>' +
                        '<span class="subValue">' + escape(it.Surname) + '</span>' +
                        '</div>';
                }
            }
        });
    });
</script>
}
